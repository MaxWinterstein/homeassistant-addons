name: Update Changelog on Renovate PR

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  update-changelog:
    if: github.actor == 'renovate[bot]'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0  # Important! Gets full history
          token: ${{ secrets.GH_PAT_MAXWINTERSTEINBOT }}

      - name: Extract dependency info from PR title
        id: extract
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"

          PREFIX=$(echo "$PR_TITLE" | sed -E 's/^\[(.*)\].*/\1/')
          DEP=$(echo "$PR_TITLE" | grep -oP 'Update \K[^ ]+')
          VER=$(echo "$PR_TITLE" | grep -oP 'to \Kv[0-9\.]+')

          echo "dep=$DEP" >> $GITHUB_OUTPUT
          echo "ver=$VER" >> $GITHUB_OUTPUT
          echo "prefix=$PREFIX" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG.md
        run: |
          if [ -z "${{ steps.extract.outputs.prefix }}" ] || [ ! -d "${{ steps.extract.outputs.prefix }}" ]; then
            echo "Directory ${{ steps.extract.outputs.prefix }} does not exist, skipping changelog update"
            exit 0
          fi

          cd "${{ steps.extract.outputs.prefix }}"
          cd ${{ steps.extract.outputs.prefix }}
          test -f CHANGELOG.md && \
            mkdir -p changelog.d/ && \
            echo "Updated ${{ steps.extract.outputs.dep }} to ${{ steps.extract.outputs.ver }}" >> changelog.d/${{ github.event.pull_request.number }}.changed.md
            

      - name: Commit and push changes
        run: |
          git config user.name "Renovate Bot"
          git config user.email "29139614+renovate[bot]@users.noreply.github.com"

          git add ${{ steps.extract.outputs.prefix }}/changelog.d/${{ github.event.pull_request.number }}.changed.md

          # Get the original commit message from the PR
          COMMIT_MSG=$(git log origin/${{ github.base_ref }}..HEAD --format=%s | tail -1)

          # Fetch and reset to base, then commit with the original message and author
          git fetch origin ${{ github.base_ref }}
          git reset --soft origin/${{ github.base_ref }}

          GIT_AUTHOR_NAME="Renovate Bot" \
          GIT_AUTHOR_EMAIL="29139614+renovate[bot]@users.noreply.github.com" \
          GIT_COMMITTER_NAME="Renovate Bot" \
          GIT_COMMITTER_EMAIL="29139614+renovate[bot]@users.noreply.github.com" \
          git commit -m "$COMMIT_MSG"

          # Force push the rewritten single-commit branch
          git push origin HEAD:${{ github.head_ref }} --force-with-lease
